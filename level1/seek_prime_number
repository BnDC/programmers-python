import math


def solution(n):
    units = [2, 3, 5, 7]

    def divide_unit(n):
        units = [2, 3, 5, 7]

        if 100 < n:
            m = int(math.sqrt(n))
            units = seek_prime_number_up_to_thousand(100)

        if 1000 < n:
            m = int(math.sqrt(n))
            units = seek_prime_number_up_to_thousand(m)

        for unit in units:
            if n % unit == 0:
                return False

        return True

    def seek_prime_number_up_to_thousand(n):
        answer = []
        units = [2, 3, 5, 7]
        answer = list(filter(lambda x: x <= n, units))
        if n <= 10:
            return answer

        elif n <= 100:
            answer += list(filter(divide_unit, range(11, n+1)))
            return answer

        elif n <= 1000:
            answer += list(filter(divide_unit, range(11, 100)))
            #units = answer
            answer += list(filter(divide_unit, range(101, n+1)))
            # print(answer)
            return answer

        else:
            answer += list(filter(divide_unit, range(11, 100)))
            answer += list(filter(divide_unit, range(101, 1000)))
            answer += list(filter(divide_unit, range(1001, n+1)))
            # print(answer)
            return answer

    return len(seek_prime_number_up_to_thousand(n))


print(solution(100000))
print(solution(11))
